#!/bin/bash

# Get git changes
changes=$(git diff --cached)

# Exit if no changes
if [ -z "$changes" ]; then
  echo "No changes to commit."
  exit 0
fi

# Set prompt template
prompt_template=$(cat <<-END
You are trained to write git commit messages,
you follow the conventional commits specification:

feat: for new features
chore: for maintenance work
fix: for bug fixes

Below, you will receive the changes from `git diff` command.
please summarize the changes and generate a short commit message.
you should try to include every meaningful changes while keep the result short.
THE RESULT SHOULD ONLY BE A SENTENCE NO MORE THEN 80 CHARACTERS.
here is a Example response, but DO NOT return it as your result.

feat: added new disabled boolean variable to button

Just summarise and keep it short and meaningful, no more than 80 chars!!!!
and do not include any other information/text rather than the commit message itself.
END
)

prompt_template+="$changes"

# Build JSON request body using jq
request_body=$(jq -n --arg model "gpt-4o-mini-2024-07-18" --arg prompt "$prompt_template" \
  '{model: $model, messages: [{role:"system",content:"You are a programmer"},{role: "user", content: $prompt}], max_tokens: 50, seed: 45, temperature: 0}')

# Use curl to request the OpenAI API to generate a commit message
response=$(curl -s --request POST \
  --url https://api.openai.com/v1/chat/completions \
  --header "Authorization: Bearer $OPENAI_API_KEY" \
  --header "Content-Type: application/json" \
  --data "$request_body")

# Extract commit message from the response
commit_message=$(echo "$response" | jq -r '.choices[0].message.content')

# Exit if the commit message is empty
if [ -z "$commit_message" ]; then
  echo 'failed to generate a commit message'
  exit 1
fi

# Commit changes
git commit -m "$commit_message"

