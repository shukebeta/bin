#!/bin/bash

# Get git changes
changes=$(git diff -w -b HEAD)

# Exit if no changes
if [ -z "$changes" ]; then
  echo "No changes to commit."
  exit 0
fi

# Set prompt template
prompt_template=$(cat <<-END
You are good at writing git commit messages;
You follow the conventional commits specification:

feat: for new features
chore: for maintenance work
fix: for bug fixes

Please help write a commit message for the following changes from a `git diff` command.

Please try to summarize all meaningful changes while keep the result short.
THE RESULT SHOULD ONLY BE NO MORE THEN 100 CHARACTERS.

Do not respond any other text rather than the commit message itself!!!
and here are the changes:

END
)

prompt_template+="$changes"

# Build JSON request body using jq
#request_body=$(jq -n --arg model "gpt-4o-mini-2024-07-18" --arg prompt "$prompt_template" \
#  '{model: $model, messages: [{role:"system",content:"You are a programmer"},{role: "user", content: $prompt}], max_tokens: 50, seed: 45, temperature: 0}')
#response=$(curl -s --request POST \
#  --url https://api.openai.com/v1/chat/completions \
#  --header "Authorization: Bearer $OPENAI_API_KEY" \
#  --header "Content-Type: application/json" \
#  --data "$request_body")

request_body=$(jq -n --arg model "mixtral-8x7b-32768" --arg prompt "$prompt_template" \
  '{model: $model, messages: [{role:"system",content:"You are a programmer"},{role: "user", content: $prompt}], max_tokens: 32768, stream: false, temperature: 0, top_p: 1, stop: null}')

# Use curl to request the OpenAI API to generate a commit message
response=$(curl -s --request POST \
  --url https://api.groq.com/openai/v1/chat/completions \
  --header "Authorization: Bearer $GROQ_API_KEY" \
  --header "Content-Type: application/json" \
  --data "$request_body")

# Extract commit message from the response
commit_message=$(echo "$response" | jq -r '.choices[0].message.content')

# Exit if the commit message is empty
if [ -z "$commit_message" ] || [ "$commit_message" == "null" ]; then
  echo 'failed to generate a commit message:'
  echo $response
  exit 1
fi

# Commit changes
git commit -am "$commit_message"

