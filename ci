#!/bin/bash

# Check if the optional parameter for staged changes is provided
if [ "$1" == "--cached" ]; then
  git_diff="git diff -w -b --cached"
  commit_command="git commit -m"
else
  git_diff="git diff -w -b HEAD"
  commit_command="git commit -am"
fi

# Get git changes
changes=$($git_diff 2>/dev/null)

if [ -z "$changes" ]; then
  echo "No changes to commit."
  exit 0
fi

prompt=$(cat <<-END
Analyze the following code changes and generate a concise, meaningful git commit message that:

0. Ignore changes that only contain space changes
1. Summarizes the main purpose or impact of the changes
2. Is no longer than 100 characters (150 characters maximum if absolutely necessary)
3. Uses present tense and imperative mood (e.g., "Add feature" not "Added feature")
4. Focuses on the "what" and "why" rather than the "how"

Provide ONLY the commit message itself, without any additional text, explanations, or formatting.

Code changes:

PROVIDE ONLY THE COMMIT MESSAGE ITSELF, WITHOUT ANY ADDITIONAL TEXT, EXPLANATIONS, OR FORMATTING.
Code changes:
END
)

prompt+="$changes"

#openai_request_body=$(jq -n --arg model "google/gemini-2.0-flash-exp:free" --arg prompt "$prompt" \
openai_request_body=$(jq -n --arg model "google/gemini-2.5-pro-exp-03-25:free" --arg prompt "$prompt" \
  '{model: $model, messages: [{role:"system",content:"You are a programmer"},{role: "user", content: $prompt}], max_tokens: 16384, temperature: 0}')

get_commit_message_openai() {
  response=$(curl -s --request POST \
    --url https://openrouter.ai/api/v1/chat/completions \
    --header "Authorization: Bearer $OPENROUTER_API_KEY" \
    --header "Content-Type: application/json" \
    --data "$openai_request_body")
  echo $response
}

response=$(get_commit_message_openai)
commit_message=$(echo "$response" | jq -r '.choices[0].message.content')

if [ -z "$commit_message" ] || [ "$commit_message" == "null" ]; then
  echo 'Failed to generate a commit message:'
  echo $response
  exit 1
fi

branch_name=$(git rev-parse --abbrev-ref HEAD)
ticket_number=$(echo "$branch_name" | grep -oEi 'mt-[0-9]+' | tr 'a-z' 'A-Z')
commit_message="$ticket_number $commit_message"
commit_message=$(echo "$commit_message"|sed 's/\\_/_/g'|sed 's/"//g')

temp_file=$(mktemp)
echo "$commit_message" > "$temp_file"

echo " OpenRouter generates:"
echo ""

while true; do
    echo ""
    echo "$commit_message"
    echo ""
    echo ""

    echo " Enter to commit, 'e' to edit in Vim, Ctrl+C to cancel"
    echo ""
    read -n 1 -p " Your choice: " choice
    echo ""

    if [ "$choice" = "e" ]; then
        vim "$temp_file"
        commit_message=$(cat "$temp_file")
        echo ""
    elif [ -n "$choice" ]; then
        echo "Invalid choice. Please try again."
        echo ""
        continue
    else
        break
    fi
done

rm "$temp_file"
$commit_command "$commit_message"
